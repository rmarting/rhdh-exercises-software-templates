---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: rhdh-exercises-sample
  title: Sample Software Template from Backstage
  description: Sample scaffolder template for demo purposes
spec:
  owner: backstage/techdocs-core
  type: service
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Provide information about the new component
      required:
        - name
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        description:
          title: Description
          type: string
          description: Help others understand what this component is for            
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            rows: 5
  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}

    #- id: fetch-docs
    #  name: Fetch Docs
    #  action: fetch:plain
    #  input:
    #    targetPath: .
    #    url: https://github.com/rmarting/rhdh-exercises-software-templates/skeletons/sample-scaffold

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        allowedHosts: ['gitlab.com']
        description: ${{ parameters.description }}
        repoUrl: gitlab.com?owner=${{ parameters.owner }}&repo=${{ parameters.name }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
